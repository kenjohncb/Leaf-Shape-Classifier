Leaf Shape ClassifierThree main platforms used to create the classifier:*	Processing application*	Visual Studio Code/Adobe Dreamweaver*	P5js web editorLibraries used:*	Ml5js*	P5js*	Node.jsGoogle Drive Link to all the files used to create the Leaf Shape Classifier: https://drive.google.com/drive/folders/1I1eNmP_iacYEo_sqI-jjjnia9M0QCPin?usp=sharingInstructions to deploy the classifier:(I have mentioned the process of how one can create the classifier on their own so that anyone who reads this document will be able to understand the process like I did and will be able to make changes according to their wish)1.	Install the Processing application from the link below:https://processing.org/download/2.	Open the file 'ProcessingLeafShapeImages.pde' from the google drive link above. Run the code in the Processing application to save the dataset images in a folder called data1.3.	Create a new folder called 'Leaf Classification'.4.	Copy and paste the folder 'data1' in the new 'Leaf Classification' folder.5.	Create separate empty files in the 'Leaf Classification' folder called 'sketch.js', 'index.html' and 'package.json'.6.	Download VS Code application for your system using the link below:https://code.visualstudio.com/download7.	Open the 'Leaf Classification' folder in Visual Studio code followed by the html, js and json codes.8.	In the 'index.html' code, copy the code from the google drive link [index.html] or copy the html code from a default p5js web editor and paste the command in the head tag: <script src="https://unpkg.com/ml5@0.6.0/dist/ml5.min.js"></script>. Loading the ml5 library in the html file.9.	Also add this line in the body tag - <script src="sketch.js"></script>. Loading the ml5 library in the html file. Putting the js code into the body of the html code.10.	You can also just download the 'index.html' file from the google drive link and move it into your 'Leaf Classification' folder and open it in VS Code.11.	In the 'sketch.js' code, copy the code from the google drive link (sketch.js) and paste it in your 'sketch.js' code in VS Code. The entire code has comments that describe what each part of the code does so that it is easier to understand it.12.	You can also just download the 'sketch.js' file from the google drive link and move it into your 'Leaf Classification' folder and open it in VS Code.13.	In the 'package.json code, copy the code from the google drive link (package.json) and paste it in your 'sketch.js' code in VS Code. The entire code has comments that describe what each part of the code does so that it is easier to understand it.14.	You can also just download the 'package.json' file from the google drive link and move it into your 'Leaf Classification' folder and open it in VS Code. The json file is used to run a local server using node.js.15.	Install node.js in your system using the link below:https://nodejs.org/en/download/16.	Save all the files in VS Code. (sketch.js, index.html and package.json)17.	Open the terminal under the folder 'Leaf Classification' in VS Code and write the following commands to open a local server:First command: npm installSecond command: npm start18.	You should be able to see new files called 'package-lock.json' and folder called 'node_modules' added to your 'Leaf Classification' folder.19.	The Local server will be created and will immediately take you to the browser where the Neural Network will start training. You can see the training happening in the right side of the browser. The training should look something like this: 20.	Once the training is complete, the respective model files will be downloaded in your 'Downloads' folder in your system. There should be three files: 'model.json', 'model_meta.json' and 'model.weights.bin'.(IMPORTANT NOTE: Make sure that you are not opening the html files to train the Neural Network because it won't work. You must need a local host to train)21.	Open a p5js web editor. Make sure that you are logged in to save the files.22.	Create a folder in the p5js sketch called 'model'.23.	Upload all three model files from the 'Downloads' folder into the 'model' folder in p5js web editor.24.	In index.html code in the p5js web editor, copy and paste this line in the head tag to load the ml5 library: <script src="https://unpkg.com/ml5@0.6.0/dist/ml5.min.js"></script>.25.	Open the link below to see my final code in p5js web editor:    https://editor.p5js.org/bhasmekenneth/sketches/HkW4iA57b(The final code in p5js web editor is not in the drive link because the entire code must be shared as a link)26.	In the web editor, click on the sketch.js code and copy the entire code.27.	Paste the code in your web editor.28.	Do the same for the style.css code.29.	Once the code is ready, click on the play button to view the preview.30.	You should be able to see the heading 'Leaf Shape Classification', a canvas below, text which will determine the shape of the leaf and a clear button.31.	You can draw the shape of the leaf (acicular, oblong, or deltoid) that you want on the canvas.32.	The text below will let you know what kind of leaf shape it is and the percentage value to see how close the drawing is to the original images in the dataset.33.	You can click on the 'Clear' button the clear the canvas and draw another leaf shape.34.	Congratulations! You have created your own Leaf Shape Classifier. You can now edit and make changes as you want to suit your project. Thank you!Instructions to view the classifier:(These are instruction to open the final web editors to see the Classifier and test them out)a)	P5js Web Editor: Draw on the Canvas to see what type of Leaf Shape that you have drawn1.	Click on the link below to open the P5js web editor:https://editor.p5js.org/bhasmekenneth/sketches/HkW4iA57b2.	 Click on the play button to view the preview on the right side of the page.3.	Draw either acicular, oblong or deltoid leaf shape on the white canvas.4.	You should be able to see the name of the shape of the leaf below the canvas.5.	Click on the 'Clear' button the clear the canvas and draw another leaf shape. b)	P5js Web Editor: Draw on the Canvas to see what type of Leaf Shape that you have drawn(Just the test: This is a code that needs more correction in the dataset but is you show an image which has a clean white background and black lines, it might work)1.	Click on the link below to open the P5js web editor that uses video camera:https://editor.p5js.org/bhasmekenneth/sketches/EO2_nWsde2.	Tilt the camera to show an image of a Leaf shape (acicular, oblong or deltoid) or show a clean white drawing sheet and draw (using black ink) leaf shapes.3.	 You should be able to see the name of the shape of the leaf below the canvas.